{
  "name": "Blogy",
  "tagline": "A lightweight express blogging engine in NodeJS + Handlebars  + Markdown",
  "body": "# BlogY - A lightweight express blogging engine in NodeJS + Handlebars  + Markdown\r\n\r\n[![Build Status](https://travis-ci.org/jeremyrajan/blogy.svg?branch=master)](https://travis-ci.org/jeremyrajan/blogy)\r\n[![npm version](https://badge.fury.io/js/blogy.svg)](https://badge.fury.io/js/blogy)\r\n[![david.dm](https://david-dm.org/jeremyrajan/blogy.svg)](https://david-dm.org/jeremyrajan/blogy)\r\n\r\n[![NPM](https://nodei.co/npm/blogy.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/blogy/)\r\n\r\nThis is BlogY (pronounced, blogee), a lightweight blogging engine built upon ExpressJS, Handlebars and Markdown. The aim being to design a very simple engine, with minimal setup. It is as simple as 1.2.3.. :)\r\n\r\n## About\r\nBlogY has been inspired from both Ghost and Jekyll. I love Ghost platform, for its simplicity and ability to change configs. And Jekyll, on how easy it is generate a website and create posts/pages. You can say, its a crossover between both blogging platforms. Rather than providing a backend for it, you can change the config file and it will do the job for you (as long as, its under your control).\r\n\r\n## Install\r\n```\r\nnpm install -g blogy\r\n```\r\nYou might want to install it globally to get access to the CLI api, for creating and deleting posts/pages.\r\n## Setup\r\nTo setup,\r\n\r\n```\r\nblogy new <name of your blog>\r\n```\r\nThis will setup a base project with defaults. After the install is successful, cd into the directory and try running:\r\n\r\n```\r\nnode index.js\r\n```\r\nThis will startup a server on localhost:3000. If you don't have any posts, the list will be empty.\r\n\r\nThere are 3 main folders, while setting up your shiny blogY engine.\r\n\r\n\r\n1. config\r\n2. templates\r\n3. data\r\n\r\n\r\n**Config** folder is where your platform configuration resides. If you look at the `index.js` inside the folder, you can see all the default configurations. You can go ahead and change things, as per your requirements. They are pretty self-explainatory :). Some of the configurations that you can set are:\r\n\r\n1. Blog Title\r\n2. URL structure for posts\r\n3. Timestamp display\r\n4. Author information, such as avatar/name\r\n5. Template information.\r\n\r\n\r\nAs you can see, 99% of the config goes via this file; which gives you guys full authority to change things and see the results. But please make sure, **\"With great powers, comes great responsibility\"**. For ex: if you change the url structure for the posts, there will be cases that blogY can't find your posts, unless the file names are updated. But dont worry, we will add a task for this in the future.\r\n\r\n**Templates** folder consists of templates, separated in folders. For instance with default setup, you will see a default template folder inside the directory. I am using [PureCSS](http://purecss.io) layout in it. As always, its your decision on choosing which folder and where. But it is always good to follow the same pattern when creating new templates. For instance, a template consists of:\r\n\r\n1. Public Folder: Which hosts all your static assets\r\n2. layout.hbs: Your master template/layout\r\n3. page.hbs: Page template\r\n4. post.hbs: Post template\r\n5. home.hbs: The main, with list of posts.\r\n6. 404.hbs: The usual deal :).\r\n\r\nAnd yes, we use handlebars as our templating engine, because its awesome!\r\n\r\nNext up, **data** folder. As the name suggests, this guy will store all your posts/pages when created. There is a separate folder for posts and pages, so that its easy to organize. And yes, you can markdown for your posts/pages which makes it even better! Again, this is a structure I follow so that things are organized and well kept.\r\n\r\n## Oh yea! CLI!\r\n\r\nBlogY also provides, out of the box CLI api for you to create or delete post/page. Again, its _easy peasy, lemon squeasy!_. Lets list down:\r\n\r\nNavigate to the folder, where you have setup blogY.\r\n\r\n#### Create Post\r\n```\r\nblogy create post --t=<Title goes here>\r\n```\r\n#### Create Page\r\n```\r\nblogy create page --t=<Title goes here>\r\n```\r\n\r\n#### Delete Post/Page\r\nThe easiest thing to do is, navigate to directory and delete the said post. Or try\r\n\r\n```\r\nblogy delete post --f=<Name of the file>\r\n```\r\nFor pages, replace `post` with `page`. Easy as that!\r\n\r\n## Issues\r\nPlease report issues here: https://github.com/jeremyrajan/blogy/issues\r\n\r\n## Contributions\r\nIf you have any new feature request, please setup a tracker for it or if you want to work on blogY with me, I will be more than happy :). Ping me at jeremyrajan[at]gmail[dot]com\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}